//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.235
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TriAxis.RunSharp.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TriAxis.RunSharp.Properties.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ambiguous binding ähnelt.
        /// </summary>
        internal static string ErrAmbiguousBinding {
            get {
                return ResourceManager.GetString("ErrAmbiguousBinding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Conversion from &apos;{0}&apos; to &apos;{1}&apos; is ambiguous ähnelt.
        /// </summary>
        internal static string ErrAmbiguousConversion {
            get {
                return ResourceManager.GetString("ErrAmbiguousConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indexers for the type cannot have different names ähnelt.
        /// </summary>
        internal static string ErrAmbiguousIndexerName {
            get {
                return ResourceManager.GetString("ErrAmbiguousIndexerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The switch type cannot be determined unambiguously ähnelt.
        /// </summary>
        internal static string ErrAmbiguousSwitchExpression {
            get {
                return ResourceManager.GetString("ErrAmbiguousSwitchExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Argument count mismatch ähnelt.
        /// </summary>
        internal static string ErrArgCountMismatch {
            get {
                return ResourceManager.GetString("ErrArgCountMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index must be greater than 0 and less than the number of arguments ähnelt.
        /// </summary>
        internal static string ErrArgIndexOutOfRange {
            get {
                return ResourceManager.GetString("ErrArgIndexOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Argument must implement IConvertible ähnelt.
        /// </summary>
        internal static string ErrArgMustImplementIConvertible {
            get {
                return ResourceManager.GetString("ErrArgMustImplementIConvertible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This method can be used only on an array operand ähnelt.
        /// </summary>
        internal static string ErrArrayOnly {
            get {
                return ResourceManager.GetString("ErrArrayOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File name must be set when assembly is configured for saving ähnelt.
        /// </summary>
        internal static string ErrAsmMissingSaveFile {
            get {
                return ResourceManager.GetString("ErrAsmMissingSaveFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value for attribute field &apos;{0}&apos; has already been defined ähnelt.
        /// </summary>
        internal static string ErrAttributeMultiField {
            get {
                return ResourceManager.GetString("ErrAttributeMultiField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value for attribute property &apos;{0}&apos; has already been defined ähnelt.
        /// </summary>
        internal static string ErrAttributeMultiProperty {
            get {
                return ResourceManager.GetString("ErrAttributeMultiProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot set value for read-only attribute property &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string ErrAttributeReadOnlyProperty {
            get {
                return ResourceManager.GetString("ErrAttributeReadOnlyProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Argument passed by reference must have exactly the same type as the formal argument ähnelt.
        /// </summary>
        internal static string ErrByRefTypeMismatch {
            get {
                return ResourceManager.GetString("ErrByRefTypeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot emit unreachable code ähnelt.
        /// </summary>
        internal static string ErrCodeNotReachable {
            get {
                return ResourceManager.GetString("ErrCodeNotReachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot use This() in a static method ähnelt.
        /// </summary>
        internal static string ErrCodeStaticThis {
            get {
                return ResourceManager.GetString("ErrCodeStaticThis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specific chained constructor can be invoked only as the first statement in a constructor ähnelt.
        /// </summary>
        internal static string ErrConstructorAlreadyChained {
            get {
                return ResourceManager.GetString("ErrConstructorAlreadyChained", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This method can be called only for constructor code ähnelt.
        /// </summary>
        internal static string ErrConstructorOnlyCall {
            get {
                return ResourceManager.GetString("ErrConstructorOnlyCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Event with custom accessors cannot be accessed as a field ähnelt.
        /// </summary>
        internal static string ErrCustomEventFieldAccess {
            get {
                return ResourceManager.GetString("ErrCustomEventFieldAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The case with same value has already been defined ähnelt.
        /// </summary>
        internal static string ErrDuplicateCase {
            get {
                return ResourceManager.GetString("ErrDuplicateCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This method cannot be used on an instance method DynamicMethodGen ähnelt.
        /// </summary>
        internal static string ErrDynamicMethodInstance {
            get {
                return ResourceManager.GetString("ErrDynamicMethodInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dynamic methods cannot have custom attributes ähnelt.
        /// </summary>
        internal static string ErrDynamicMethodNoCustomAttrs {
            get {
                return ResourceManager.GetString("ErrDynamicMethodNoCustomAttrs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The DynamicMethod hasn&apos;t been completed yet ähnelt.
        /// </summary>
        internal static string ErrDynamicMethodNotCompleted {
            get {
                return ResourceManager.GetString("ErrDynamicMethodNotCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This method can be used only on an instance method DynamicMethodGen ähnelt.
        /// </summary>
        internal static string ErrDynamicMethodNotInstance {
            get {
                return ResourceManager.GetString("ErrDynamicMethodNotInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Else() called without a matching If() ähnelt.
        /// </summary>
        internal static string ErrElseWithoutIf {
            get {
                return ResourceManager.GetString("ErrElseWithoutIf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index count mismatch ähnelt.
        /// </summary>
        internal static string ErrIndexCountMismatch {
            get {
                return ResourceManager.GetString("ErrIndexCountMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interface cannot define conversion operators ähnelt.
        /// </summary>
        internal static string ErrInterfaceNoConversion {
            get {
                return ResourceManager.GetString("ErrInterfaceNoConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interface cannot define a constructor ähnelt.
        /// </summary>
        internal static string ErrInterfaceNoCtor {
            get {
                return ResourceManager.GetString("ErrInterfaceNoCtor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interface cannot contain explicit interface implementations ähnelt.
        /// </summary>
        internal static string ErrInterfaceNoExplicitImpl {
            get {
                return ResourceManager.GetString("ErrInterfaceNoExplicitImpl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interface cannot have fields ähnelt.
        /// </summary>
        internal static string ErrInterfaceNoField {
            get {
                return ResourceManager.GetString("ErrInterfaceNoField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interface cannot contain nested types ähnelt.
        /// </summary>
        internal static string ErrInterfaceNoNested {
            get {
                return ResourceManager.GetString("ErrInterfaceNoNested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Method &apos;{1}&apos; of interface &apos;{0}&apos; is not implemented ähnelt.
        /// </summary>
        internal static string ErrInterfaceNotImplemented {
            get {
                return ResourceManager.GetString("ErrInterfaceNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Break() called outside of a loop or switch ähnelt.
        /// </summary>
        internal static string ErrInvalidBreak {
            get {
                return ResourceManager.GetString("ErrInvalidBreak", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ifTrue and ifFalse must be of the same type ähnelt.
        /// </summary>
        internal static string ErrInvalidConditionalVariants {
            get {
                return ResourceManager.GetString("ErrInvalidConditionalVariants", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Continue() called outside of a loop ähnelt.
        /// </summary>
        internal static string ErrInvalidContinue {
            get {
                return ResourceManager.GetString("ErrInvalidContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot convert type from &apos;{0}&apos; to &apos;{1}&apos; ähnelt.
        /// </summary>
        internal static string ErrInvalidConversion {
            get {
                return ResourceManager.GetString("ErrInvalidConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid delegate type ähnelt.
        /// </summary>
        internal static string ErrInvalidDelegateType {
            get {
                return ResourceManager.GetString("ErrInvalidDelegateType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Either none or both &apos;Add&apos; and &apos;Remove&apos; event accessors must be defined ähnelt.
        /// </summary>
        internal static string ErrInvalidEventAccessors {
            get {
                return ResourceManager.GetString("ErrInvalidEventAccessors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Statement can be used only in an exception block ähnelt.
        /// </summary>
        internal static string ErrInvalidExceptionStatement {
            get {
                return ResourceManager.GetString("ErrInvalidExceptionStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The field is accessed from an invalid context ähnelt.
        /// </summary>
        internal static string ErrInvalidFieldContext {
            get {
                return ResourceManager.GetString("ErrInvalidFieldContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot transfer control out of a finally handler ähnelt.
        /// </summary>
        internal static string ErrInvalidFinallyBranch {
            get {
                return ResourceManager.GetString("ErrInvalidFinallyBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The provided method must be either a MethodInfo or a ConstructorInfo ähnelt.
        /// </summary>
        internal static string ErrInvalidMethodBase {
            get {
                return ResourceManager.GetString("ErrInvalidMethodBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid operand ähnelt.
        /// </summary>
        internal static string ErrInvalidOperand {
            get {
                return ResourceManager.GetString("ErrInvalidOperand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot apply operator &apos;{0}&apos; to operands of type &apos;{1}&apos; ähnelt.
        /// </summary>
        internal static string ErrInvalidOperation {
            get {
                return ResourceManager.GetString("ErrInvalidOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The property is accessed from an invalid context ähnelt.
        /// </summary>
        internal static string ErrInvalidPropertyContext {
            get {
                return ResourceManager.GetString("ErrInvalidPropertyContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Statement can be used only in a switch block ähnelt.
        /// </summary>
        internal static string ErrInvalidSwitchStatement {
            get {
                return ResourceManager.GetString("ErrInvalidSwitchStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The variable is accessed from an invalid context ähnelt.
        /// </summary>
        internal static string ErrInvalidVariableContext {
            get {
                return ResourceManager.GetString("ErrInvalidVariableContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The variable is accessed from an invalid scope ähnelt.
        /// </summary>
        internal static string ErrInvalidVariableScope {
            get {
                return ResourceManager.GetString("ErrInvalidVariableScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Method must provide a return value: {0} ähnelt.
        /// </summary>
        internal static string ErrMethodMustReturnValue {
            get {
                return ResourceManager.GetString("ErrMethodMustReturnValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find constructor ähnelt.
        /// </summary>
        internal static string ErrMissingConstructor {
            get {
                return ResourceManager.GetString("ErrMissingConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The target type doesn&apos;t have a default property ähnelt.
        /// </summary>
        internal static string ErrMissingDefaultProperty {
            get {
                return ResourceManager.GetString("ErrMissingDefaultProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find event ähnelt.
        /// </summary>
        internal static string ErrMissingEvent {
            get {
                return ResourceManager.GetString("ErrMissingEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find field ähnelt.
        /// </summary>
        internal static string ErrMissingField {
            get {
                return ResourceManager.GetString("ErrMissingField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find method ähnelt.
        /// </summary>
        internal static string ErrMissingMethod {
            get {
                return ResourceManager.GetString("ErrMissingMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find property ähnelt.
        /// </summary>
        internal static string ErrMissingProperty {
            get {
                return ResourceManager.GetString("ErrMissingProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot access indexed property without indexes ähnelt.
        /// </summary>
        internal static string ErrMissingPropertyIndex {
            get {
                return ResourceManager.GetString("ErrMissingPropertyIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attribute &apos;{0}&apos; has already been set ähnelt.
        /// </summary>
        internal static string ErrMultiAttribute {
            get {
                return ResourceManager.GetString("ErrMultiAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only one parameter modifier is allowed out of [Ref, Out, Params] ähnelt.
        /// </summary>
        internal static string ErrMultiParamModifier {
            get {
                return ResourceManager.GetString("ErrMultiParamModifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Member visibility can be set only once ähnelt.
        /// </summary>
        internal static string ErrMultiVisibility {
            get {
                return ResourceManager.GetString("ErrMultiVisibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Member virtual type can be set only once ähnelt.
        /// </summary>
        internal static string ErrMultiVTable {
            get {
                return ResourceManager.GetString("ErrMultiVTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot emit code for an abstract or runtime-provided method ähnelt.
        /// </summary>
        internal static string ErrNoCodeAllowed {
            get {
                return ResourceManager.GetString("ErrNoCodeAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is no block that can be closed by this method ähnelt.
        /// </summary>
        internal static string ErrNoOpenBlocks {
            get {
                return ResourceManager.GetString("ErrNoOpenBlocks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot complete code as there are some remaining opened blocks ähnelt.
        /// </summary>
        internal static string ErrOpenBlocksRemaining {
            get {
                return ResourceManager.GetString("ErrOpenBlocksRemaining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Operand of type &apos;{0}&apos; cannot be read ähnelt.
        /// </summary>
        internal static string ErrOperandNotReadable {
            get {
                return ResourceManager.GetString("ErrOperandNotReadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Address of operand of type &apos;{0}&apos; cannot be retrieved ähnelt.
        /// </summary>
        internal static string ErrOperandNotReferencible {
            get {
                return ResourceManager.GetString("ErrOperandNotReferencible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Operand of type &apos;{0}&apos; cannot be written ähnelt.
        /// </summary>
        internal static string ErrOperandNotWritable {
            get {
                return ResourceManager.GetString("ErrOperandNotWritable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The parameter array must be the last parameter defined ähnelt.
        /// </summary>
        internal static string ErrParamArrayMustBeLast {
            get {
                return ResourceManager.GetString("ErrParamArrayMustBeLast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The parameter array must be defined using an array type ähnelt.
        /// </summary>
        internal static string ErrParamArrayNotArray {
            get {
                return ResourceManager.GetString("ErrParamArrayNotArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown parameter: {0} ähnelt.
        /// </summary>
        internal static string ErrParamUnknown {
            get {
                return ResourceManager.GetString("ErrParamUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value type constructor cannot invoke a base constructor ähnelt.
        /// </summary>
        internal static string ErrStructNoBaseCtor {
            get {
                return ResourceManager.GetString("ErrStructNoBaseCtor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value types cannot have default constructors ähnelt.
        /// </summary>
        internal static string ErrStructNoDefaultCtor {
            get {
                return ResourceManager.GetString("ErrStructNoDefaultCtor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Type is already completed ähnelt.
        /// </summary>
        internal static string ErrTypeAlreadyCompleted {
            get {
                return ResourceManager.GetString("ErrTypeAlreadyCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The provided type must be a delegate type ähnelt.
        /// </summary>
        internal static string ErrTypeMustBeDelegate {
            get {
                return ResourceManager.GetString("ErrTypeMustBeDelegate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The type hasn&apos;t been completed yet ähnelt.
        /// </summary>
        internal static string ErrTypeNotCompleted {
            get {
                return ResourceManager.GetString("ErrTypeNotCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable used without having been initialized ähnelt.
        /// </summary>
        internal static string ErrUninitializedVarAccess {
            get {
                return ResourceManager.GetString("ErrUninitializedVarAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable accessed before it&apos;s type was defined ähnelt.
        /// </summary>
        internal static string ErrUntypedVarAccess {
            get {
                return ResourceManager.GetString("ErrUntypedVarAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot return value from a void method ähnelt.
        /// </summary>
        internal static string ErrVoidMethodReturningValue {
            get {
                return ResourceManager.GetString("ErrVoidMethodReturningValue", resourceCulture);
            }
        }
    }
}
